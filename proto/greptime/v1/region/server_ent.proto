// Copyright 2023 Greptime Team
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package greptime.v1.region;

option java_package = "io.greptime.v1.region_ent";
option java_outer_classname = "ServerEnt";
option go_package = "github.com/GreptimeTeam/greptime-proto/go/greptime/v1/region_ent";

import "greptime/v1/region/server.proto";
import "greptime/v1/common.proto";

service RegionEnt {
  rpc Handle(RegionEntRequest) returns (RegionEntResponse);
}

message RegionEntRequest {
  RegionRequestHeader header = 1;
  oneof body {
    IngestSstRequests ingest_ssts = 2;
    RegionMetadataRequest region_metadata = 3;
  }
}

message RegionEntResponse {
  ResponseHeader header = 1;
  bytes payload = 2;
}

message IngestSstRequests {
  repeated IngestSstRequest requests = 1;
}

message IngestSstRequest {
  uint64 region_id = 1;
  string file_id = 2;
  uint64 file_size = 3;
  int64 min_ts = 4;
  int64 max_ts = 5;
}

// Request to get the region's metadata.
// The metadata should be formatted as a JSON string, carried in the payload field of the response.
message RegionMetadataRequest {
  uint64 region_id = 1;
}
